"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10) @auth
        "Fetch all records from TEST_TABLE."
    testTable: [TestTable!]! @all
}

"Account of a person who utilizes this application."
type User {
  id: Int!
  name: String!
  email: String!
}
type TestTable {
  id: Int  
  name: String  
  created_at: DateTime  
}
type Mutation {
  login(
    email: String! @rules(apply: ["required", "email"])
    password: String! @rules(apply: ["required", "string"])
  ): AuthPayload @field(resolver: "App\\GraphQL\\Mutations\\LoginMutation")
}

type AuthPayload {
  access_token: String!
  token_type: String!
  expires_in: Int!
  user: User
}